/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var grepo_pb = require('./grepo_pb.js');
var user_pb = require('./user_pb.js');
goog.exportSymbol('proto.appData.appData', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appData.appData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appData.appData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.appData.appData.displayName = 'proto.appData.appData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appData.appData.prototype.toObject = function(opt_includeInstance) {
  return proto.appData.appData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appData.appData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appData.appData.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentrepo: (f = msg.getCurrentrepo()) && grepo_pb.GRepo.toObject(includeInstance, f),
    currentuser: (f = msg.getCurrentuser()) && user_pb.User.toObject(includeInstance, f),
    reposMap: (f = msg.getReposMap()) ? f.toObject(includeInstance, proto.GRepo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appData.appData}
 */
proto.appData.appData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appData.appData;
  return proto.appData.appData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appData.appData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appData.appData}
 */
proto.appData.appData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new grepo_pb.GRepo;
      reader.readMessage(value,grepo_pb.GRepo.deserializeBinaryFromReader);
      msg.setCurrentrepo(value);
      break;
    case 2:
      var value = new user_pb.User;
      reader.readMessage(value,user_pb.User.deserializeBinaryFromReader);
      msg.setCurrentuser(value);
      break;
    case 3:
      var value = msg.getReposMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.GRepo.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appData.appData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appData.appData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appData.appData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appData.appData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentrepo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      grepo_pb.GRepo.serializeBinaryToWriter
    );
  }
  f = message.getCurrentuser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      user_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getReposMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.GRepo.serializeBinaryToWriter);
  }
};


/**
 * optional GRepo currentRepo = 1;
 * @return {?proto.GRepo}
 */
proto.appData.appData.prototype.getCurrentrepo = function() {
  return /** @type{?proto.GRepo} */ (
    jspb.Message.getWrapperField(this, grepo_pb.GRepo, 1));
};


/** @param {?proto.GRepo|undefined} value */
proto.appData.appData.prototype.setCurrentrepo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.appData.appData.prototype.clearCurrentrepo = function() {
  this.setCurrentrepo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.appData.appData.prototype.hasCurrentrepo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User currentUser = 2;
 * @return {?proto.User}
 */
proto.appData.appData.prototype.getCurrentuser = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, user_pb.User, 2));
};


/** @param {?proto.User|undefined} value */
proto.appData.appData.prototype.setCurrentuser = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.appData.appData.prototype.clearCurrentuser = function() {
  this.setCurrentuser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.appData.appData.prototype.hasCurrentuser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, GRepo> repos = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.GRepo>}
 */
proto.appData.appData.prototype.getReposMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.GRepo>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.GRepo));
};


proto.appData.appData.prototype.clearReposMap = function() {
  this.getReposMap().clear();
};


goog.object.extend(exports, proto.appData);
